asyncapi: 3.0.0
id: urn:com.babelforce:rtvbp
info:
  title: Realtime Voice Bridge Protocol
  version: 1.0.0
defaultContentType: application/json
channels:
  stream:
    address: /stream
    messages:
      PingRequestMessage:
        $ref: '#/components/messages/PingRequestMessage'
      PingResponseMessage:
        $ref: '#/components/messages/PingResponseMessage'
      AudioStreamStartRequestMessage:
        $ref: '#/components/messages/AudioStreamStartRequestMessage'
      AudioStreamStartResponseMessage:
        $ref: '#/components/messages/AudioStreamStartResponseMessage'
      AudioStreamStopRequestMessage:
        $ref: '#/components/messages/AudioStreamStopRequestMessage'
      AudioStreamStopResponseMessage:
        $ref: '#/components/messages/AudioStreamStopResponseMessage'
      RecordingStartRequestMessage:
        $ref: '#/components/messages/RecordingStartRequestMessage'
      RecordingStartResponseMessage:
        $ref: '#/components/messages/RecordingStartResponseMessage'
      RecordingStopRequestMessage:
        $ref: '#/components/messages/RecordingStopRequestMessage'
      RecordingStopResponseMessage:
        $ref: '#/components/messages/RecordingStopResponseMessage'
      RecordingFinishedEventMessage:
        $ref: '#/components/messages/RecordingFinishedEventMessage'
      SessionUpdatedEventMessage:
        $ref: '#/components/messages/SessionUpdatedEventMessage'
      SessionTerminatedEventMessage:
        $ref: '#/components/messages/SessionTerminatedEventMessage'
components:
  schemas:
    PingRequestPayload:
      type: object
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Header'
      - title: PingRequest
        properties:
          kind:
            type: string
            enum:
            - request
          method:
            type: string
            const: ping
          data:
            $ref: '#/components/schemas/PingRequest'
        additionalProperties: false
        required:
        - kind
        - method
        - data
      example:
        id: VPk_6IQStguK0vJrdJ4mT
        ts: 1431648000
        kind: request
        method: ping
        data: null
    Header:
      type: object
      properties:
        id:
          description: Message ID
          type: string
        ts:
          description: Timestamp
          type: integer
          format: int64
      additionalProperties: false
      required:
      - id
      - ts
    PingRequest:
      type: 'null'
    PingResponsePayload:
      type: object
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Header'
      - title: PingResponse
        properties:
          kind:
            type: string
            enum:
            - response
          request_id:
            type: string
          status:
            $ref: '#/components/schemas/ResponseStatus'
          data:
            $ref: '#/components/schemas/PingResponse'
        additionalProperties: false
        required:
        - kind
        - request_id
        - data
      example:
        id: VPk_6IQStguK0vJrdJ4mT
        ts: 1431648000
        kind: response
        request_id: VPk_6IQStguK0vJrdJ4mT
        status: Ok
        data: null
    ResponseStatus:
      type: string
      enum:
      - Ok
      - NotFound
      - InternalServerError
    PingResponse:
      type: 'null'
    AudioStreamStartRequestPayload:
      type: object
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Header'
      - title: AudioStreamStartRequest
        properties:
          kind:
            type: string
            enum:
            - request
          method:
            type: string
            const: audio_stream_start
          data:
            $ref: '#/components/schemas/AudioStreamStartRequest'
        additionalProperties: false
        required:
        - kind
        - method
        - data
      example:
        id: VPk_6IQStguK0vJrdJ4mT
        ts: 1431648000
        kind: request
        method: audio_stream_start
        data:
          codec: alaw
    AudioStreamStartRequest:
      type: object
      properties:
        codec:
          anyOf:
          - $ref: '#/components/schemas/AudioCodec'
          - type: 'null'
      required:
      - codec
    AudioCodec:
      type: string
      enum:
      - slin
      - alaw
    AudioStreamStartResponsePayload:
      type: object
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Header'
      - title: AudioStreamStartResponse
        properties:
          kind:
            type: string
            enum:
            - response
          request_id:
            type: string
          status:
            $ref: '#/components/schemas/ResponseStatus'
          data:
            $ref: '#/components/schemas/AudioStreamStartResponse'
        additionalProperties: false
        required:
        - kind
        - request_id
        - data
      example:
        id: VPk_6IQStguK0vJrdJ4mT
        ts: 1431648000
        kind: response
        request_id: VPk_6IQStguK0vJrdJ4mT
        status: Ok
        data: null
    AudioStreamStartResponse:
      type: 'null'
    AudioStreamStopRequestPayload:
      type: object
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Header'
      - title: AudioStreamStopRequest
        properties:
          kind:
            type: string
            enum:
            - request
          method:
            type: string
            const: audio_stream_stop
          data:
            $ref: '#/components/schemas/AudioStreamStopRequest'
        additionalProperties: false
        required:
        - kind
        - method
        - data
      example:
        id: VPk_6IQStguK0vJrdJ4mT
        ts: 1431648000
        kind: request
        method: audio_stream_stop
        data: null
    AudioStreamStopRequest:
      type: 'null'
    AudioStreamStopResponsePayload:
      type: object
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Header'
      - title: AudioStreamStopResponse
        properties:
          kind:
            type: string
            enum:
            - response
          request_id:
            type: string
          status:
            $ref: '#/components/schemas/ResponseStatus'
          data:
            $ref: '#/components/schemas/AudioStreamStopResponse'
        additionalProperties: false
        required:
        - kind
        - request_id
        - data
      example:
        id: VPk_6IQStguK0vJrdJ4mT
        ts: 1431648000
        kind: response
        request_id: VPk_6IQStguK0vJrdJ4mT
        status: Ok
        data: null
    AudioStreamStopResponse:
      type: 'null'
    RecordingStartRequestPayload:
      type: object
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Header'
      - title: RecordingStartRequest
        properties:
          kind:
            type: string
            enum:
            - request
          method:
            type: string
            const: recording_start
          data:
            $ref: '#/components/schemas/RecordingStartRequest'
        additionalProperties: false
        required:
        - kind
        - method
        - data
      example:
        id: VPk_6IQStguK0vJrdJ4mT
        ts: 1431648000
        kind: request
        method: recording_start
        data:
          tags:
          - tag1
          - tag2
    RecordingStartRequest:
      type: object
      properties:
        tags:
          description: Tags to store alongside the Recording
          type:
          - array
          - 'null'
          uniqueItems: true
          items:
            type: string
      additionalProperties: false
      required:
      - tags
    RecordingStartResponsePayload:
      type: object
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Header'
      - title: RecordingStartResponse
        properties:
          kind:
            type: string
            enum:
            - response
          request_id:
            type: string
          status:
            $ref: '#/components/schemas/ResponseStatus'
          data:
            $ref: '#/components/schemas/RecordingStartResponse'
        additionalProperties: false
        required:
        - kind
        - request_id
        - data
      example:
        id: VPk_6IQStguK0vJrdJ4mT
        ts: 1431648000
        kind: response
        request_id: VPk_6IQStguK0vJrdJ4mT
        status: Ok
        data:
          recording_id: VPk_6IQStguK0vJrdJ4mT
    RecordingStartResponse:
      type: object
      properties:
        recording_id:
          type: string
      additionalProperties: false
      required:
      - recording_id
    RecordingStopRequestPayload:
      type: object
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Header'
      - title: RecordingStopRequest
        properties:
          kind:
            type: string
            enum:
            - request
          method:
            type: string
            const: recording_stop
          data:
            $ref: '#/components/schemas/RecordingStopRequest'
        additionalProperties: false
        required:
        - kind
        - method
        - data
      example:
        id: VPk_6IQStguK0vJrdJ4mT
        ts: 1431648000
        kind: request
        method: recording_stop
        data: null
    RecordingStopRequest:
      type: 'null'
    RecordingStopResponsePayload:
      type: object
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Header'
      - title: RecordingStopResponse
        properties:
          kind:
            type: string
            enum:
            - response
          request_id:
            type: string
          status:
            $ref: '#/components/schemas/ResponseStatus'
          data:
            $ref: '#/components/schemas/RecordingStopResponse'
        additionalProperties: false
        required:
        - kind
        - request_id
        - data
      example:
        id: VPk_6IQStguK0vJrdJ4mT
        ts: 1431648000
        kind: response
        request_id: VPk_6IQStguK0vJrdJ4mT
        status: Ok
        data: null
    RecordingStopResponse:
      type: 'null'
    RecordingFinishedEventPayload:
      type: object
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Header'
      - title: RecordingFinishedEvent
        properties:
          kind:
            type: string
            enum:
            - event
          event:
            type: string
            const: recording_finished
          data:
            $ref: '#/components/schemas/RecordingFinishedEvent'
        additionalProperties: false
        required:
        - kind
        - event
        - data
      example:
        id: VPk_6IQStguK0vJrdJ4mT
        ts: 1431648000
        kind: event
        event: recording_finished
        data:
          recording_id: VPk_6IQStguK0vJrdJ4mT
    RecordingFinishedEvent:
      type: object
      properties:
        recording_id:
          type: string
      required:
      - recording_id
    SessionUpdatedEventPayload:
      type: object
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Header'
      - title: SessionUpdatedEvent
        properties:
          kind:
            type: string
            enum:
            - event
          event:
            type: string
            const: session_updated
          data:
            $ref: '#/components/schemas/SessionUpdatedEvent'
        additionalProperties: false
        required:
        - kind
        - event
        - data
      example:
        id: VPk_6IQStguK0vJrdJ4mT
        ts: 1431648000
        kind: event
        event: session_updated
        data:
          session_id: VPk_6IQStguK0vJrdJ4mT
          capabilities:
            events:
            - session_updated
            - session_terminated
            requests:
            - call_hangup
            - recording_start
            - recording_stop
            audio:
              direction: both
              codecs:
              - alaw
          metadata:
            call.id: '1234'
            call.from: '+493010001000'
    SessionUpdatedEvent:
      type: object
      properties:
        session_id:
          description: Unique ID of the session
          type: string
        capabilities:
          anyOf:
          - $ref: '#/components/schemas/SessionCapabilities'
          - type: 'null'
        metadata:
          description: Additional Metadata provided by the session owner
          type:
          - object
          - 'null'
          additionalProperties: true
      required:
      - session_id
      - capabilities
    SessionCapabilities:
      type: object
      properties:
        events:
          description: List of events which will be dispatched the lifetime of the session
          type: array
          uniqueItems: true
          items:
            type: string
        requests:
          description: List of requests which are allowed to be sent to the session
          type: array
          uniqueItems: true
          items:
            type: string
        audio:
          description: Audio capabilities - set when audio is enabled on the session
          anyOf:
          - $ref: '#/components/schemas/AudioCapabilities'
          - type: 'null'
      required:
      - events
      - requests
      - audio
    AudioCapabilities:
      type: object
      properties:
        direction:
          $ref: '#/components/schemas/AudioDirection'
        codecs:
          description: Set of supported codecs
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/AudioCodec'
      required:
      - direction
      - codecs
    AudioDirection:
      oneOf:
      - description: Audio flows into both directions
        type: string
        const: both
      - description: Audio can flow into the session owning side
        type: string
        const: in
      - description: Audio can flow out of the session owning side
        type: string
        const: out
    SessionTerminatedEventPayload:
      type: object
      additionalProperties: false
      allOf:
      - $ref: '#/components/schemas/Header'
      - title: SessionTerminatedEvent
        properties:
          kind:
            type: string
            enum:
            - event
          event:
            type: string
            const: session_terminated
          data:
            $ref: '#/components/schemas/SessionTerminatedEvent'
        additionalProperties: false
        required:
        - kind
        - event
        - data
      example:
        id: VPk_6IQStguK0vJrdJ4mT
        ts: 1431648000
        kind: event
        event: session_terminated
        data:
          session_id: VPk_6IQStguK0vJrdJ4mT
          reason: normal
    SessionTerminatedEvent:
      type: object
      properties:
        session_id:
          type: string
        reason:
          $ref: '#/components/schemas/SessionCloseReason'
      required:
      - session_id
      - reason
    SessionCloseReason:
      type: string
      enum:
      - normal
      - error
      - timeout
  messages:
    PingRequestMessage:
      payload:
        $ref: '#/components/schemas/PingRequestPayload'
    PingResponseMessage:
      payload:
        $ref: '#/components/schemas/PingResponsePayload'
    AudioStreamStartRequestMessage:
      payload:
        $ref: '#/components/schemas/AudioStreamStartRequestPayload'
    AudioStreamStartResponseMessage:
      payload:
        $ref: '#/components/schemas/AudioStreamStartResponsePayload'
    AudioStreamStopRequestMessage:
      payload:
        $ref: '#/components/schemas/AudioStreamStopRequestPayload'
    AudioStreamStopResponseMessage:
      payload:
        $ref: '#/components/schemas/AudioStreamStopResponsePayload'
    RecordingStartRequestMessage:
      payload:
        $ref: '#/components/schemas/RecordingStartRequestPayload'
    RecordingStartResponseMessage:
      payload:
        $ref: '#/components/schemas/RecordingStartResponsePayload'
    RecordingStopRequestMessage:
      payload:
        $ref: '#/components/schemas/RecordingStopRequestPayload'
    RecordingStopResponseMessage:
      payload:
        $ref: '#/components/schemas/RecordingStopResponsePayload'
    RecordingFinishedEventMessage:
      payload:
        $ref: '#/components/schemas/RecordingFinishedEventPayload'
    SessionUpdatedEventMessage:
      payload:
        $ref: '#/components/schemas/SessionUpdatedEventPayload'
    SessionTerminatedEventMessage:
      payload:
        $ref: '#/components/schemas/SessionTerminatedEventPayload'
operations:
  Ping:
    channel:
      $ref: '#/channels/stream'
    action: send
    messages:
    - $ref: '#/channels/stream/messages/PingRequestMessage'
    reply:
      channel:
        $ref: '#/channels/stream'
      messages:
      - $ref: '#/channels/stream/messages/PingResponseMessage'
  AudioStreamStart:
    channel:
      $ref: '#/channels/stream'
    action: send
    messages:
    - $ref: '#/channels/stream/messages/AudioStreamStartRequestMessage'
    reply:
      channel:
        $ref: '#/channels/stream'
      messages:
      - $ref: '#/channels/stream/messages/AudioStreamStartResponseMessage'
  AudioStreamStop:
    channel:
      $ref: '#/channels/stream'
    action: send
    messages:
    - $ref: '#/channels/stream/messages/AudioStreamStopRequestMessage'
    reply:
      channel:
        $ref: '#/channels/stream'
      messages:
      - $ref: '#/channels/stream/messages/AudioStreamStopResponseMessage'
  RecordingStart:
    channel:
      $ref: '#/channels/stream'
    action: send
    messages:
    - $ref: '#/channels/stream/messages/RecordingStartRequestMessage'
    reply:
      channel:
        $ref: '#/channels/stream'
      messages:
      - $ref: '#/channels/stream/messages/RecordingStartResponseMessage'
  RecordingStop:
    channel:
      $ref: '#/channels/stream'
    action: send
    messages:
    - $ref: '#/channels/stream/messages/RecordingStopRequestMessage'
    reply:
      channel:
        $ref: '#/channels/stream'
      messages:
      - $ref: '#/channels/stream/messages/RecordingStopResponseMessage'
  RecordingFinished:
    channel:
      $ref: '#/channels/stream'
    action: receive
    messages:
    - $ref: '#/channels/stream/messages/RecordingFinishedEventMessage'
  SessionUpdated:
    channel:
      $ref: '#/channels/stream'
    action: receive
    messages:
    - $ref: '#/channels/stream/messages/SessionUpdatedEventMessage'
  SessionTerminated:
    channel:
      $ref: '#/channels/stream'
    action: receive
    messages:
    - $ref: '#/channels/stream/messages/SessionTerminatedEventMessage'
