{
  "$schema": "https://asyncapi.com/definitions/3.0.0/asyncapi.json",
  "title": "Message",
  "type": "object",
  "properties": {
    "id": {
      "description": "Message ID",
      "type": "string"
    },
    "ts": {
      "description": "Timestamp",
      "type": "string",
      "format": "date-time"
    },
    "metadata": {
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": true
    }
  },
  "required": [
    "id",
    "ts"
  ],
  "oneOf": [
    {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "const": "request"
        },
        "data": {
          "$ref": "#/components/schemas/Request"
        }
      },
      "required": [
        "kind",
        "data"
      ]
    },
    {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "const": "response"
        },
        "data": {
          "$ref": "#/components/schemas/Response"
        }
      },
      "required": [
        "kind",
        "data"
      ]
    },
    {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "const": "event"
        },
        "data": {
          "$ref": "#/components/schemas/Event"
        }
      },
      "required": [
        "kind",
        "data"
      ]
    }
  ],
  "components": {
    "schemas": {
      "Request": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "oneOf": [
          {
            "description": "Closes the current session",
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "const": "session_close"
              },
              "params": {
                "type": "object",
                "properties": {
                  "reason": {
                    "$ref": "#/components/schemas/SessionCloseReason"
                  }
                },
                "required": [
                  "reason"
                ]
              }
            },
            "required": [
              "method",
              "params"
            ]
          },
          {
            "description": "Hangup terminates the current call",
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "const": "hangup"
              }
            },
            "required": [
              "method"
            ]
          },
          {
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "const": "move"
              },
              "params": {
                "$ref": "#/components/schemas/Move"
              }
            },
            "required": [
              "method",
              "params"
            ]
          },
          {
            "description": "Start a new recording",
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "const": "recording_start"
              },
              "params": {
                "$ref": "#/components/schemas/RecordingStartRequest"
              }
            },
            "required": [
              "method",
              "params"
            ]
          },
          {
            "description": "Stop the current recording",
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "const": "recording_stop"
              }
            },
            "required": [
              "method"
            ]
          },
          {
            "description": "Playback audio content",
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "const": "playback"
              },
              "params": {
                "type": "object",
                "properties": {
                  "interrupt": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "required": [
                  "interrupt"
                ],
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "url"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "language": {
                        "type": "string"
                      },
                      "voice": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "text": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "language",
                      "voice",
                      "text"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PlaybackContent"
                    }
                  }
                ]
              }
            },
            "required": [
              "method",
              "params"
            ]
          },
          {
            "description": "Sets session variables",
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "const": "session_set"
              },
              "params": {
                "type": "object",
                "additionalProperties": true
              }
            },
            "required": [
              "method",
              "params"
            ]
          },
          {
            "description": "Dispatches a custom event in the babelforce platform",
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "const": "event_dispatch"
              },
              "params": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "string"
                  },
                  "data": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "required": [
                  "event",
                  "data"
                ]
              }
            },
            "required": [
              "method",
              "params"
            ]
          },
          {
            "description": "Probe the stream",
            "type": "object",
            "properties": {
              "method": {
                "type": "string",
                "const": "ping"
              },
              "params": {
                "type": "null"
              }
            },
            "required": [
              "method",
              "params"
            ]
          }
        ]
      },
      "SessionCloseReason": {
        "type": "string",
        "enum": [
          "normal",
          "error",
          "timeout"
        ]
      },
      "Move": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "next"
            ]
          },
          {
            "type": "object",
            "properties": {
              "application": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "required": [
              "application"
            ],
            "additionalProperties": false
          }
        ]
      },
      "RecordingStartRequest": {
        "type": "object",
        "properties": {
          "tags": {
            "description": "Tags to store alongside the Recording",
            "type": [
              "array",
              "null"
            ],
            "uniqueItems": true,
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false,
        "required": [
          "tags"
        ]
      },
      "PlaybackContent": {
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              }
            },
            "required": [
              "url"
            ]
          },
          {
            "type": "object",
            "properties": {
              "language": {
                "type": "string"
              },
              "voice": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "text": {
                "type": "string"
              }
            },
            "required": [
              "language",
              "voice",
              "text"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlaybackContent"
            }
          }
        ]
      },
      "Response": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          },
          "body": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseBody"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "id",
          "request_id"
        ]
      },
      "ResponseBody": {
        "anyOf": [
          {
            "type": "object"
          },
          true
        ]
      },
      "Event": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "event": {
                "type": "string",
                "const": "audio_stream_started"
              },
              "data": {
                "$ref": "#/components/schemas/AudioStreamStartedEvent"
              }
            },
            "required": [
              "event",
              "data"
            ]
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "type": "string",
                "const": "audio_stream_data_received"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "uint8",
                  "minimum": 0,
                  "maximum": 255
                }
              }
            },
            "required": [
              "event",
              "data"
            ]
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "type": "string",
                "const": "audio_stream_stopped"
              }
            },
            "required": [
              "event"
            ]
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "type": "string",
                "const": "session_closed"
              }
            },
            "required": [
              "event"
            ]
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "type": "string",
                "const": "dtmf_received"
              },
              "data": {
                "type": "object",
                "properties": {
                  "digit": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1
                  },
                  "duration": {
                    "type": "integer",
                    "format": "uint32",
                    "minimum": 0
                  }
                },
                "required": [
                  "digit",
                  "duration"
                ]
              }
            },
            "required": [
              "event",
              "data"
            ]
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "type": "string",
                "const": "error"
              },
              "data": {
                "$ref": "#/components/schemas/ErrorEvent"
              }
            },
            "required": [
              "event",
              "data"
            ]
          }
        ]
      },
      "AudioStreamStartedEvent": {
        "type": "object",
        "properties": {
          "channels": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint8",
            "minimum": 0,
            "maximum": 255
          },
          "sample_rate": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint32",
            "minimum": 0
          },
          "sample_size": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint8",
            "minimum": 0,
            "maximum": 255
          },
          "bits_per_sample": {
            "type": [
              "integer",
              "null"
            ],
            "format": "uint8",
            "minimum": 0,
            "maximum": 255
          }
        }
      },
      "ErrorEvent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "uint16",
            "minimum": 0,
            "maximum": 65535
          },
          "details": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "code",
          "details"
        ]
      }
    }
  }
}